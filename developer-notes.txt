# Here are some notes on the development process.

# First clone the repo.
git clone https://github.com/JeffersonLab/rfwtools

# Then create a venv for development
python3.7 -m venv venv

# Activate the venv and install the development requirements
# These packages are used strictly in packaging, deploying, and testing
source venv/bin/activate.csh
pip3 install -r requirements_dev.txt

# Now you can build wheels and source distributions, run unit tests, and upload to the test PyPI or PyPI.  One thing
# I like to do is create a project in a different directory and then install this package in editable mode.  Instead
# of actually installing it, pip creates a symlink back to your package directory and your source changes are reflected
# in the downstream project without reinstalling.  You do have to re-import packages or restart your interpreter though.
mkdir /some/other/my_project
cd /some/other/my_project
python -m venv venv
source venv/bin/activate.csh
pip install -e /path/to/rfwtools

# If you want to make source changes then you will need to install the packages in requirements.txt.  The versions
# listed where the ones used in the last development cycle.  You may want to update those versions, but make sure to
# test!

# To run a unittests in multiple environments
tox
# To run them directly in an IDE with builtin test runner, do the equivalent of this
cd /path/to/.../rfwtools
python3 -m unittest

# To build distributions.  You may need to remove directory content if rebuilding
python setup.py sdist bdist_wheel

# To build documentation that can be used in github
docsrc/build-docs.bash
git add .
git commit -m"Updated documentation"
# You should probably also increment version numbers in setup.cfg and put out a new package to PyPI (shown below).

# To upload to the test PyPI repo.  You may need to add the --cert /etc/pki/tls/cert.pem option for SSL problems.
edit setup.cfg with latest info
twine upload --repository testpypi dist/*

# To upload to the production PyPI repo
edit setup.cfg with latest info
twine upload --repository pypi dist/*

# The distribution package is called rfwtools_jlab, but the import package root is rfwtools
# To install from production PyPI
pip install rfwtools_jlab

# To install from Test PyPI
pip3 install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ rfwtools_jlab

## Some other comments
requirements.txt are the versions that were used from within my IDE and with my IDE unit test runner.  This is the set
that worked during development, installation set will probably be different.

requirements_dev.txt are the versions of tools required to build, test, and distribute the package.  These are the set
that worked during the last development cycle.

requirements.testing.txt are the packages that needed to be installed for testing to work.  They are basically the same
as requirements.txt, but with a few extras used exclusively in tests and the local rfwtools package itself.